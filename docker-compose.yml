version: "3"

services:
    airflow:
        container_name: coronalytics_airflow
        restart: "always"
        depends_on:
            - postgres
            - elasticsearch
        build: ./services/airflow/
        ports:
            - 8080:8080
        env_file:
            - config/airflow.env
            - config/elasticsearch.env
            - config/postgres.env
        volumes:
            - .:/usr/local/airflow/dags
        command: webserver
        healthcheck:
            test: ["CMD", "python", "./health_check.py"]
            interval: 30s
            timeout: 30s
            retries: 3
            start_period: 120s

    portainer:
        container_name: coronalytics_portainer
        restart: "always"
        build: ./services/portainer
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_volume:/data
        ports:
            - 9090:9000
        command: -H unix:///var/run/docker.sock

    elasticsearch:
        container_name: coronalytics_elasticsearch
        restart: "always"
        build: ./services/elasticsearch
        env_file:
            - config/elasticsearch.env
        ports:
            - 9200:9200
            - 9300:9300

    kibana:
        container_name: coronalytics_kibana
        depends_on:
            - elasticsearch
        restart: "always"
        build: ./services/kibana
        ports:
            - 5601:5601
        env_file:
            - config/elasticsearch.env

    postgres:
        container_name: coronalytics_postgres
        restart: "always"
        build: ./services/postgres
        ports:
            - 5432:5432
        env_file:
            - config/postgres.env

volumes:
    postgres_volume:
    portainer_volume:
